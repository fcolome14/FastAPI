name: Build and Deploy Docs

# Trigger workflow on pushes to main or pull requests targeting main
on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
    paths:
      - 'docs/**'  # Trigger only when changes occur in the docs directory
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch
    paths:
      - 'docs/**'  # Trigger only when changes occur in the docs directory

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install project dependencies
          pip install sphinx  # Install Sphinx if it's not in your requirements

      # Step 4: Build Sphinx documentation
      - name: Build HTML documentation
        run: |
          cd docs/  # Navigate to docs folder
          make html  # Build the docs

      # Step 5: Check if gh-pages branch exists
      - name: Check if gh-pages branch exists
        run: |
          git branch -a  # List all branches (including remote)
          git log -n 5  # Show last 5 commits (check if push happened)

      # Step 6: Deploy to GitHub Pages using ghp-import
      - name: Run ghp-import
        run: |
          ghp-import -n -p -f docs/_build/html  # Push the docs to gh-pages

      # Step 7: Force push to gh-pages if necessary
      - name: Force push to gh-pages
        run: |
          git checkout --orphan gh-pages  # Create a new branch without history
          git rm -rf .  # Remove all files (we don't want any of the old files)
          cp -r docs/_build/html/* .  # Copy the built documentation
          git add .  # Stage the files
          git commit -m "Deploy documentation"  # Commit the files
          git push origin gh-pages --force  # Force push to gh-pages

      # Step 8: Upload documentation artifacts (optional)
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/_build/html  # Upload the generated HTML docs
